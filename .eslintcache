[{"/mnt/d/code/projects/newpathfinding/src/index.js":"1","/mnt/d/code/projects/newpathfinding/src/reportWebVitals.js":"2","/mnt/d/code/projects/newpathfinding/src/Pathfinding/Board/Board.js":"3","/mnt/d/code/projects/newpathfinding/src/Pathfinding/Node/Node.js":"4","/mnt/d/code/projects/newpathfinding/src/Pathfinding/pathfinding.js":"5","/mnt/d/code/projects/newpathfinding/src/main.js":"6","/mnt/d/code/projects/newpathfinding/src/Sorting/Sorting.js":"7","/mnt/d/code/projects/newpathfinding/src/Sorting/Bar/Bar.js":"8","/mnt/d/code/projects/newpathfinding/src/Sorting/Bar/Algorithms/topdownmergesort.js":"9","/mnt/d/code/projects/newpathfinding/src/Sidebar/SideOptions.js":"10"},{"size":508,"mtime":1614620034505,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610173509703,"results":"13","hashOfConfig":"12"},{"size":19268,"mtime":1614682354571,"results":"14","hashOfConfig":"12"},{"size":839,"mtime":1614478049586,"results":"15","hashOfConfig":"12"},{"size":4811,"mtime":1614444361700,"results":"16","hashOfConfig":"12"},{"size":710,"mtime":1614482349684,"results":"17","hashOfConfig":"12"},{"size":193,"mtime":1612142679471,"results":"18","hashOfConfig":"12"},{"size":14389,"mtime":1614690262854,"results":"19","hashOfConfig":"12"},{"size":1621,"mtime":1613029106535,"results":"20","hashOfConfig":"12"},{"size":1971,"mtime":1614682373247,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ap0dwy",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/mnt/d/code/projects/newpathfinding/src/index.js",[],["46","47"],"/mnt/d/code/projects/newpathfinding/src/reportWebVitals.js",[],"/mnt/d/code/projects/newpathfinding/src/Pathfinding/Board/Board.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"/mnt/d/code/projects/newpathfinding/src/Pathfinding/Node/Node.js",["79"],"import React, { Component, createRef } from 'react'\nimport './node.scss'\nexport default class Node extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            x: props.x,\n            y: props.y,\n            id: +props.x + \"|\" + props.y,\n            class: props.type,\n            ref: props.refpass,\n        }\n        \n    }\n    render() {\n        return (\n            <div id={this.state.id} className={this.state.class}\n                ref={this.state.ref}\n                onMouseDown={() => this.props.onMouseDown(this.state.ref,this.state.x,this.state.y)}\n                onMouseEnter={() => this.props.onMouseEnter(this.state.ref,this.state.x,this.state.y)}\n                onMouseUp={() => this.props.onMouseUp(this.state.ref,this.state.x,this.state.y)}>\n            </div>\n        )\n    }\n}\n","/mnt/d/code/projects/newpathfinding/src/Pathfinding/pathfinding.js",["80"],"export default class pathfinder {\n    constructor() {\n        this.astar = null\n    }\n    solveAstar(grid, start, end) {\n        this.astar = new astar(start, end, grid)\n        return this.astar.solve()\n    }\n\n\n}\n\nclass astar {\n    constructor(start, end, grid) {\n        this.START_POS = start\n        this.END_POS = end\n        this.grid = grid;\n        console.log(start);\n    }\n    nodeEquals(n1, n2) {\n        if (n1.x === n2.x && n1.y === n2.y) {\n            return true\n        }\n    }\n    solve() {\n        let open = []\n        let openAnimationCells = []\n        let closed = []\n        console.log(this.START_POS);\n        let start = this.grid[this.START_POS.y][this.START_POS.x]\n        let end = this.grid[this.END_POS.y][this.END_POS.x]\n        console.log(this.grid);\n        start.f = 0\n        start.g = 0\n        start.start = true\n        end.end = true\n        start.parent = null\n        open.push(start)\n        while (open.length > 0) {\n            open.sort((a, b) => (a.f > b.f) ? 1 : -1)\n\n            if (open.length > 5) {\n                //return\n            }\n            let cur = open[0]\n            open = open.slice(1)\n            let neighbours = this.getNeighbours(cur)\n            for (let i = 0; i < neighbours.length; i++) {\n                let cn = neighbours[i]\n                let clone = JSON.parse(JSON.stringify(cur))\n                cn.parent = clone\n                if (cn.wall) {\n                    continue\n                }\n                // fin conditon\n                if (cn.end) {\n                    console.log(\"finished\");\n                    let cc = cn\n                    let path = []\n                    while (cc != null && !(cc.start)) {\n                        path.push(cc)\n                        cc = cc.parent\n                    }\n                    path.reverse()\n\n                    return [path, openAnimationCells]\n\n\n                }\n                let g = cur.g\n                cn.g = cn.diagonal ? g + 2 : g + 1\n                cn.h = this.heuristic(cn, end)\n                cn.f = cn.g + cn.h\n\n                let obj2 = null\n                let indexclosed = null\n                for (let x = 0; x < closed.length; x++) {\n\n                    if (this.nodeEquals(closed[x], cn)) {\n                        obj2 = closed[x]\n                        indexclosed = x\n                        break\n                    }\n                }\n                if (obj2 != null) {\n                    if (cn.g < obj2.g) {\n                        open.push(cn.g)\n                    }\n                    continue\n                }\n                let obj = null\n                let openindex = null\n                for (let x = 0; x < open.length; x++) {\n\n                    if (this.nodeEquals(open[x], cn)) {\n                        obj = open[x]\n                        openindex = x\n                        break\n                    }\n                }\n                if (obj != null) {\n                    //console.log(\"switched\", this.accessRef(open[openindex]));\n                    if (cn.g < obj.g) {\n                        openAnimationCells.push(cn)\n                        open[openindex] = cn\n                    }\n                    continue\n                }\n                open.push(cn)\n                openAnimationCells.push(cn)\n\n\n\n\n            }\n            closed.push(cur)\n        }\n        return [[], openAnimationCells]\n    }\n    heuristic(pos0, pos1) {\n        var a = pos0.x - pos1.x\n        var b = pos0.y - pos1.y\n\n        return Math.sqrt(a * a + b * b)\n    }\n    getNeighbours(node, diagonal = false) {\n        let grid = this.grid\n        var ret = [];\n        var x = node.y\n        var y = node.x\n\n        if (grid[x - 1] && grid[x - 1][y]) {\n            ret.push(grid[x - 1][y]);\n        }\n        if (grid[x + 1] && grid[x + 1][y]) {\n            ret.push(grid[x + 1][y]);\n        }\n        if (grid[x][y - 1]) {\n            ret.push(grid[x][y - 1]);\n        }\n        if (grid[x][y + 1]) {\n            ret.push(grid[x][y + 1]);\n        }\n        let ret2 = []\n        if (diagonal) {\n\n            if (grid[x + 1] && grid[x + 1][y + 1]) {\n                ret2.push(grid[x + 1][y + 1]);\n            }\n            if (grid[x + 1] && grid[x + 1][y - 1]) {\n                ret2.push(grid[x + 1][y - 1]);\n            }\n            if (grid[x - 1] && grid[x - 1][y + 1]) {\n                ret2.push(grid[x - 1][y + 1]);\n            }\n            if (grid[x - 1] && grid[x - 1][y - 1]) {\n                ret2.push(grid[x - 1][y - 1]);\n            }\n            for (let i = 0; i < ret2.length; i++) {\n                ret2[i].diagonal = true;\n            }\n        }\n        // for (let x = 0; x < ret.length; x++) {\n        //     ret[x].parent = null\n        // }\n        return ret.concat(ret2);\n    }\n\n}","/mnt/d/code/projects/newpathfinding/src/main.js",[],"/mnt/d/code/projects/newpathfinding/src/Sorting/Sorting.js",[],"/mnt/d/code/projects/newpathfinding/src/Sorting/Bar/Bar.js",["81","82","83","84","85","86","87","88","89","90","91"],"/mnt/d/code/projects/newpathfinding/src/Sorting/Bar/Algorithms/topdownmergesort.js",["92","93","94"],"export function mergeSort(\n    array,\n    start,\n    end,\n    workArray,\n    anims\n) {\n    if (start == end) {\n        return\n    }\n    const initialStart = start\n    const initialEnd = end\n    const middle = Math.floor((start + end) / 2)\n    anims.push({ type: \"split\", left: [start, middle], right: [middle + 1, end], middle: [middle, middle + 1] })//initial split\n    mergeSort(workArray, start, middle, array, anims);\n    mergeSort(workArray, middle + 1, end, array, anims);\n    anims.push({ type: \"merge\", start: start, end : end, last: (initialStart == start && initialEnd == end) })// TODO: add last merge checking\n    merge(array, start, middle, end, workArray, anims);\n}\nfunction merge(\n    array,\n    start,\n    middle,\n    end,\n    workArray,\n    anims\n) {\n\n    let k = start\n    let i = start\n    let j = middle + 1\n    //perform the merge in sort order\n    while (i <= middle && j <= end) {\n        //compare\n        anims.push({ type: \"compare\", vals: [i, j, (workArray[i] <= workArray[j]) ? i : j] })\n        if (workArray[i] <= workArray[j]) {\n            anims.push({ type: \"change\", vals: [k, workArray[i]] });\n            array[k++] = workArray[i++];\n        } else {\n            anims.push({ type: \"change\", vals: [k, workArray[j]] });\n            array[k++] = workArray[j++];\n        }\n    }\n\n\n    //pick up the last element(s)\n    while (i <= middle) {\n        anims.push({ type: \"change\", vals: [k, workArray[i], i] });\n        array[k++] = workArray[i++];\n    }\n    while (j <= end) {\n        anims.push({ type: \"change\", vals: [k, workArray[j], j] });\n        array[k++] = workArray[j++];\n    }\n}","/mnt/d/code/projects/newpathfinding/src/Sidebar/SideOptions.js",["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":108,"column":25,"nodeType":"103","messageId":"104","endLine":108,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":160,"column":21,"nodeType":"107","endLine":160,"endColumn":42},{"ruleId":"105","severity":1,"message":"106","line":224,"column":13,"nodeType":"107","endLine":224,"endColumn":54},{"ruleId":"105","severity":1,"message":"106","line":225,"column":13,"nodeType":"107","endLine":225,"endColumn":50},{"ruleId":"105","severity":1,"message":"106","line":315,"column":9,"nodeType":"107","endLine":315,"endColumn":30},{"ruleId":"105","severity":1,"message":"106","line":322,"column":9,"nodeType":"107","endLine":322,"endColumn":30},{"ruleId":"105","severity":1,"message":"106","line":328,"column":13,"nodeType":"107","endLine":328,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":329,"column":13,"nodeType":"107","endLine":329,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":334,"column":13,"nodeType":"107","endLine":334,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":335,"column":13,"nodeType":"107","endLine":335,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":344,"column":9,"nodeType":"110","messageId":"111","endLine":356,"endColumn":10},{"ruleId":"105","severity":1,"message":"106","line":346,"column":17,"nodeType":"107","endLine":346,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":348,"column":17,"nodeType":"107","endLine":348,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":352,"column":17,"nodeType":"107","endLine":352,"endColumn":54},{"ruleId":"105","severity":1,"message":"106","line":354,"column":17,"nodeType":"107","endLine":354,"endColumn":54},{"ruleId":"108","severity":1,"message":"109","line":357,"column":9,"nodeType":"110","messageId":"111","endLine":369,"endColumn":10},{"ruleId":"105","severity":1,"message":"106","line":359,"column":17,"nodeType":"107","endLine":359,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":361,"column":17,"nodeType":"107","endLine":361,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":365,"column":17,"nodeType":"107","endLine":365,"endColumn":54},{"ruleId":"105","severity":1,"message":"106","line":367,"column":17,"nodeType":"107","endLine":367,"endColumn":54},{"ruleId":"105","severity":1,"message":"106","line":379,"column":13,"nodeType":"107","endLine":379,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":393,"column":13,"nodeType":"107","endLine":393,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":394,"column":13,"nodeType":"107","endLine":394,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":428,"column":33,"nodeType":"103","messageId":"104","endLine":428,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":429,"column":31,"nodeType":"103","messageId":"104","endLine":429,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":456,"column":23,"nodeType":"103","messageId":"104","endLine":456,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":456,"column":33,"nodeType":"103","messageId":"104","endLine":456,"endColumn":35},{"ruleId":"112","severity":1,"message":"113","line":477,"column":39,"nodeType":"114","messageId":"115","endLine":477,"endColumn":41},{"ruleId":"101","severity":1,"message":"102","line":477,"column":55,"nodeType":"103","messageId":"104","endLine":477,"endColumn":57},{"ruleId":"112","severity":1,"message":"113","line":477,"column":71,"nodeType":"114","messageId":"115","endLine":477,"endColumn":73},{"ruleId":"101","severity":1,"message":"102","line":477,"column":104,"nodeType":"103","messageId":"104","endLine":477,"endColumn":106},{"ruleId":"116","severity":1,"message":"117","line":1,"column":28,"nodeType":"118","messageId":"119","endLine":1,"endColumn":37},{"ruleId":"116","severity":1,"message":"120","line":81,"column":25,"nodeType":"118","messageId":"119","endLine":81,"endColumn":36},{"ruleId":"116","severity":1,"message":"121","line":2,"column":28,"nodeType":"118","messageId":"119","endLine":2,"endColumn":34},{"ruleId":"108","severity":1,"message":"109","line":38,"column":17,"nodeType":"110","messageId":"111","endLine":94,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":44,"column":54,"nodeType":"103","messageId":"104","endLine":44,"endColumn":56},{"ruleId":"101","severity":1,"message":"122","line":64,"column":37,"nodeType":"103","messageId":"104","endLine":64,"endColumn":39},{"ruleId":"108","severity":1,"message":"109","line":104,"column":9,"nodeType":"110","messageId":"111","endLine":138,"endColumn":10},{"ruleId":"116","severity":1,"message":"123","line":110,"column":27,"nodeType":"118","messageId":"119","endLine":110,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":110,"column":46,"nodeType":"103","messageId":"104","endLine":110,"endColumn":48},{"ruleId":"116","severity":1,"message":"124","line":117,"column":35,"nodeType":"118","messageId":"119","endLine":117,"endColumn":44},{"ruleId":"108","severity":1,"message":"109","line":151,"column":9,"nodeType":"110","messageId":"111","endLine":208,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":157,"column":46,"nodeType":"103","messageId":"104","endLine":157,"endColumn":48},{"ruleId":"101","severity":1,"message":"122","line":177,"column":29,"nodeType":"103","messageId":"104","endLine":177,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":8,"column":15,"nodeType":"103","messageId":"104","endLine":8,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":17,"column":78,"nodeType":"103","messageId":"104","endLine":17,"endColumn":80},{"ruleId":"101","severity":1,"message":"102","line":17,"column":101,"nodeType":"103","messageId":"104","endLine":17,"endColumn":103},{"ruleId":"125","severity":1,"message":"126","line":1,"column":1,"nodeType":"127","messageId":"128","endLine":1,"endColumn":14,"fix":"129"},{"ruleId":"130","severity":1,"message":"131","line":42,"column":13,"nodeType":"132","endLine":42,"endColumn":44},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","'indexclosed' is assigned a value but never used.","'useRef' is defined but never used.","Expected '!==' and instead saw '!='.","'higher' is assigned a value but never used.","'newHeight' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"135","text":"136"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",[0,13],""]